{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { tweetReducer, userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  tweetList: tweetReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst middleware = [thunk];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/CS-Dept.-automated-info.-timeline/main-slide/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","tweetReducer","userLoginReducer","userRegisterReducer","reducer","tweetList","userLogin","userRegister","middleware","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,YADF,EAEEC,gBAFF,EAGEC,mBAHF,QAIO,yBAJP;AAMA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,SAAS,EAAEJ,YADmB;AAE9BK,EAAAA,SAAS,EAAEJ,gBAFmB;AAG9BK,EAAAA,YAAY,EAAEJ;AAHgB,CAAD,CAA/B;AAMA,MAAMK,UAAU,GAAG,CAACT,KAAD,CAAnB;AAEA,MAAMU,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBR,EAAAA,SAAS,EAAE;AAAES,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,KAAK,GAAGpB,WAAW,CACvBQ,OADuB,EAEvBU,YAFuB,EAGvBd,mBAAmB,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n  tweetReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n} from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n  tweetList: tweetReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}