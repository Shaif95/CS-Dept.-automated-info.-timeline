{"ast":null,"code":"var _jsxFileName = \"E:\\\\CS-Dept.-automated-info.-timeline\\\\sl\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Login.scss';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout } from '../../actions/userActions';\nimport { useEffect } from 'react';\nimport Meta from '../../components/Meta';\nimport { toast } from 'react-toastify';\nimport { options } from '../../constants/toastConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  history\n}) => {\n  _s();\n\n  const validationSchema = yup.object().shape({\n    emailAddress: yup.string().required('*Email Address is required'),\n    password: yup.string().required('*Password is required')\n  });\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo,\n    error\n  } = userLogin;\n  const redirect = '/';\n  useEffect(() => {\n    if (error) {\n      dispatch(logout());\n      toastHandler();\n    }\n\n    if (userInfo) {\n      history.push(redirect);\n    } // eslint-disable-next-line\n\n  }, [history, userInfo, redirect, error]);\n\n  const toastHandler = () => {\n    toast.info(error, options);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"loginuser-container\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          md: 7,\n          sm: 8,\n          xs: 10,\n          className: \"form-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              emailAddress: '',\n              password: ''\n            },\n            validationSchema: validationSchema,\n            onSubmit: (values, actions) => {\n              actions.setSubmitting(true);\n              dispatch(login(values));\n              actions.setSubmitting(false);\n              actions.resetForm();\n            },\n            children: ({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              className: \"form-container\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formGroupEmailAddress\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Email Address\",\n                  name: \"emailAddress\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.emailAddress,\n                  className: touched.emailAddress && errors.emailAddress ? 'error' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), touched.emailAddress && errors.emailAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.emailAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formGroupPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.password,\n                  className: touched.password && errors.password ? 'error' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), touched.password && errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-end mr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary btn-style\",\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-register\",\n          children: [\"Not a member? Register from\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link-style\",\n            to: \"/registration\",\n            children: \"Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"Q9DmGMsbbWsXfUatN82A2avI6C0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/CS-Dept.-automated-info.-timeline/sl/src/pages/Login/Login.jsx"],"names":["React","Container","Form","Row","Col","Button","Link","yup","Formik","useDispatch","useSelector","login","logout","useEffect","Meta","toast","options","Login","history","validationSchema","object","shape","emailAddress","string","required","password","dispatch","userLogin","state","userInfo","error","redirect","toastHandler","push","info","values","actions","setSubmitting","resetForm","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './Login.scss'\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, logout } from '../../actions/userActions'\r\nimport { useEffect } from 'react'\r\nimport Meta from '../../components/Meta'\r\nimport { toast } from 'react-toastify'\r\nimport { options } from '../../constants/toastConstant'\r\n\r\nconst Login = ({ history }) => {\r\n  const validationSchema = yup.object().shape({\r\n    emailAddress: yup.string().required('*Email Address is required'),\r\n    password: yup.string().required('*Password is required'),\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo, error } = userLogin\r\n\r\n  const redirect = '/'\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(logout())\r\n      toastHandler()\r\n    }\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, userInfo, redirect, error])\r\n\r\n  const toastHandler = () => {\r\n    toast.info(error, options)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title='User Login' />\r\n      <Container fluid className='loginuser-container'>\r\n        <Row className='justify-content-center'>\r\n          <Col lg={6} md={7} sm={8} xs={10} className='form-wrapper'>\r\n            <Formik\r\n              initialValues={{ emailAddress: '', password: '' }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true)\r\n                dispatch(login(values))\r\n                actions.setSubmitting(false)\r\n                actions.resetForm()\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form className='form-container' onSubmit={handleSubmit}>\r\n                  <Form.Group\r\n                    className='mb-3'\r\n                    controlId='formGroupEmailAddress'\r\n                  >\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Email Address'\r\n                      name='emailAddress'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.emailAddress}\r\n                      className={\r\n                        touched.emailAddress && errors.emailAddress\r\n                          ? 'error'\r\n                          : null\r\n                      }\r\n                    />\r\n                    {touched.emailAddress && errors.emailAddress ? (\r\n                      <div className='error-message'>{errors.emailAddress}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  <Form.Group className='mb-3' controlId='formGroupPassword'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Password'\r\n                      name='password'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      className={\r\n                        touched.password && errors.password ? 'error' : null\r\n                      }\r\n                    />\r\n                    {touched.password && errors.password ? (\r\n                      <div className='error-message'>{errors.password}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  <Row className='justify-content-end mr-1'>\r\n                    <Button variant='primary btn-style' type='submit'>\r\n                      Login\r\n                    </Button>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n        <Row className='justify-content-center'>\r\n          <span className='login-register'>\r\n            Not a member? Register from{' '}\r\n            <Link className='link-style' to='/registration'>\r\n              Here\r\n            </Link>\r\n          </span>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}