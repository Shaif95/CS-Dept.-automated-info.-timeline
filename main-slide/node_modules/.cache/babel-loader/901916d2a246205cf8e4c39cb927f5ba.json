{"ast":null,"code":"var _jsxFileName = \"E:\\\\CS-Dept.-automated-info.-timeline\\\\sl\\\\src\\\\pages\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Register.scss';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { register, logout } from '../../actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Meta from '../../components/Meta';\nimport { toast } from 'react-toastify';\nimport { options } from '../../constants/toastConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); // const userRegister = useSelector((state) => state.userRegister)\n  // const { userInfo: userRegInfo, error } = userRegister\n\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    userInfo,\n    error\n  } = userRegister;\n  const redirect = '/';\n  useEffect(() => {\n    if (error) {\n      dispatch(logout());\n      toastHandler();\n    }\n\n    if (userInfo) {\n      history.push(redirect);\n    } // eslint-disable-next-line\n\n  }, [history, userInfo, redirect, error]);\n\n  const toastHandler = () => {\n    toast.info(error, options);\n  };\n\n  const validationSchema = yup.object().shape({\n    firstName: yup.string().min(3, '*First Name must have at least 3 characters').max(10, \"*First Name can't be longer than 10 characters\").required('*First Name is required'),\n    lastName: yup.string().min(3, '*Last Name must have at least 3 characters').max(10, \"*Last Name can't be longer than 10 characters\").required('*Last Name is required'),\n    emailAddress: yup.string().email('*Must be a valid email address').required('*Email is required'),\n    password: yup.string().required('*Password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"adduser-container\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          md: 7,\n          sm: 8,\n          xs: 10,\n          className: \"form-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              firstName: '',\n              lastName: '',\n              emailAddress: '',\n              password: ''\n            },\n            validationSchema: validationSchema,\n            onSubmit: (values, actions) => {\n              actions.setSubmitting(true);\n              actions.setSubmitting(true);\n              dispatch(register(values));\n              actions.setSubmitting(false);\n              actions.resetForm();\n            },\n            children: ({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              className: \"form-container\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formGroupFirstName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"FirstName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"First Name\",\n                  name: \"firstName\",\n                  autocomplete: \"off\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.firstName,\n                  className: touched.firstName && errors.firstName ? 'error' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), touched.firstName && errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formGroupLastName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"LastName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Last Name\",\n                  name: \"lastName\",\n                  autocomplete: \"off\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.lastName,\n                  className: touched.lastName && errors.lastName ? 'error' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this), touched.lastName && errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formGroupEmailAddress\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Email Address\",\n                  name: \"emailAddress\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.emailAddress,\n                  className: touched.emailAddress && errors.emailAddress ? 'error' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), touched.emailAddress && errors.emailAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.emailAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formGroupPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.password,\n                  className: touched.password && errors.password ? 'error' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), touched.password && errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-end mr-1\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary btn-style\",\n                  type: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-register\",\n          children: [\"Already a member? Login from\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link-style\",\n            to: \"/login\",\n            children: \"Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"D+CplZbvNaOrQRg2lrSzbqhcz9c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/CS-Dept.-automated-info.-timeline/sl/src/pages/Register/Register.jsx"],"names":["React","Container","Form","Row","Col","Button","Link","yup","Formik","register","logout","useDispatch","useSelector","useEffect","Meta","toast","options","Register","history","dispatch","userRegister","state","userInfo","error","redirect","toastHandler","push","info","validationSchema","object","shape","firstName","string","min","max","required","lastName","emailAddress","email","password","values","actions","setSubmitting","resetForm","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './Register.scss'\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik'\r\nimport { register, logout } from '../../actions/userActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport Meta from '../../components/Meta'\r\nimport { toast } from 'react-toastify'\r\nimport { options } from '../../constants/toastConstant'\r\n\r\nconst Register = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  // const userRegister = useSelector((state) => state.userRegister)\r\n  // const { userInfo: userRegInfo, error } = userRegister\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { userInfo, error } = userRegister\r\n\r\n  const redirect = '/'\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(logout())\r\n      toastHandler()\r\n    }\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, userInfo, redirect, error])\r\n\r\n  const toastHandler = () => {\r\n    toast.info(error, options)\r\n  }\r\n\r\n  const validationSchema = yup.object().shape({\r\n    firstName: yup\r\n      .string()\r\n      .min(3, '*First Name must have at least 3 characters')\r\n      .max(10, \"*First Name can't be longer than 10 characters\")\r\n      .required('*First Name is required'),\r\n    lastName: yup\r\n      .string()\r\n      .min(3, '*Last Name must have at least 3 characters')\r\n      .max(10, \"*Last Name can't be longer than 10 characters\")\r\n      .required('*Last Name is required'),\r\n    emailAddress: yup\r\n      .string()\r\n      .email('*Must be a valid email address')\r\n      .required('*Email is required'),\r\n    password: yup.string().required('*Password is required'),\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Meta title='User Registration' />\r\n      <Container fluid className='adduser-container'>\r\n        <Row className='justify-content-center'>\r\n          <Col lg={6} md={7} sm={8} xs={10} className='form-wrapper'>\r\n            <Formik\r\n              initialValues={{\r\n                firstName: '',\r\n                lastName: '',\r\n                emailAddress: '',\r\n                password: '',\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true)\r\n                actions.setSubmitting(true)\r\n                dispatch(register(values))\r\n                actions.setSubmitting(false)\r\n                actions.resetForm()\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <Form className='form-container' onSubmit={handleSubmit}>\r\n                  <Form.Group className='mb-3' controlId='formGroupFirstName'>\r\n                    <Form.Label>FirstName</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='First Name'\r\n                      name='firstName'\r\n                      autocomplete='off'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.firstName}\r\n                      className={\r\n                        touched.firstName && errors.firstName ? 'error' : null\r\n                      }\r\n                    />\r\n                    {touched.firstName && errors.firstName ? (\r\n                      <div className='error-message'>{errors.firstName}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  <Form.Group className='mb-3' controlId='formGroupLastName'>\r\n                    <Form.Label>LastName</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Last Name'\r\n                      name='lastName'\r\n                      autocomplete='off'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.lastName}\r\n                      className={\r\n                        touched.lastName && errors.lastName ? 'error' : null\r\n                      }\r\n                    />\r\n                    {touched.lastName && errors.lastName ? (\r\n                      <div className='error-message'>{errors.lastName}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    className='mb-3'\r\n                    controlId='formGroupEmailAddress'\r\n                  >\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Email Address'\r\n                      name='emailAddress'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.emailAddress}\r\n                      className={\r\n                        touched.emailAddress && errors.emailAddress\r\n                          ? 'error'\r\n                          : null\r\n                      }\r\n                    />\r\n                    {touched.emailAddress && errors.emailAddress ? (\r\n                      <div className='error-message'>{errors.emailAddress}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  <Form.Group className='mb-3' controlId='formGroupPassword'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Password'\r\n                      name='password'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      className={\r\n                        touched.password && errors.password ? 'error' : null\r\n                      }\r\n                    />\r\n                    {touched.password && errors.password ? (\r\n                      <div className='error-message'>{errors.password}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Row className='justify-content-end mr-1'>\r\n                    <Button variant='primary btn-style' type='submit'>\r\n                      Register\r\n                    </Button>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n        <Row className='justify-content-center'>\r\n          <span className='login-register'>\r\n            Already a member? Login from{' '}\r\n            <Link className='link-style' to='/login'>\r\n              Here\r\n            </Link>\r\n          </span>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}